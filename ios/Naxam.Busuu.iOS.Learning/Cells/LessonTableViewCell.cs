// This file has been autogenerated from a class added in the UI designer.

using System;
using CoreGraphics;
using Foundation;
using MvvmCross.Binding.BindingContext;
using MvvmCross.Binding.iOS.Views;
using MvvmCross.Platform.Converters;
using Naxam.Busuu.iOS.Core.Converter;
using Naxam.Busuu.iOS.Core.Extensions;
using Naxam.Busuu.iOS.Core.Views;
using Naxam.Busuu.Learning.Model;
using UIKit;

namespace Naxam.Busuu.iOS.Learning
{
    public interface ILessonTableViewCellDelegate
    {
        void DidTapOnLessonCell(LessonTableViewCell cell);
    }
    public partial class LessonTableViewCell : MvxTableViewCell
    {
        public ILessonTableViewCellDelegate Delegate;
        private readonly MvxImageViewLoader imgLessonViewLoader;
        // open state of cell
        public bool IsOpen = false;
        // maintain color of cell
        CGColor cellColor;
        public LessonTableViewCell(IntPtr handle) : base(handle)
        {
            imgLessonViewLoader = new MvxImageViewLoader(() => imgLesson);
			this.DelayBind(() =>
		  {
			  var bindingSet = this.CreateBindingSet<LessonTableViewCell, LessonModel>();
			  bindingSet.Bind(lbNumber).To(m => m.LessonNumber);
			  bindingSet.Bind(lbTitle).To(m => m.LessonName);
			  bindingSet.Bind(imgLessonViewLoader).To(m => m.Icon);
			  bindingSet.Bind(imgLesson.Layer).For("BorderColor").To(m => m.Color).WithConversion(new HexToUIColorValueConverter(), null);
			  bindingSet.Bind(CellShape).For("RippleColor").To(m => m.Color).WithConversion(new HexToUIColorValueConverter(), null);
			  bindingSet.Apply();
		  });
        }
        public RippleLayer CellShape;

        private nfloat _LabelDefaultHeight;
        public override void AwakeFromNib()
        {
            base.AwakeFromNib();
            imgLesson.Layer.CornerRadius = imgLesson.Bounds.Size.Height / 2;
            imgLesson.Layer.BorderWidth = 1;

            btnDownload.SetImage(UIImage.FromBundle("download_icon"), UIControlState.Normal);
            btnDownload.TintColor = UIColor.LightGray;
			
           
            CellShape = new RippleLayer();
            // config ripple layer
            CellShape.ParentView = ContentView;
            CellShape.InitShapeLayer();
            ContentView.AddGestureRecognizer(new UITapGestureRecognizer(HandleTap));

            _LabelDefaultHeight = this.numberLblHeightConstraint.Constant;
        }


        public void Update(bool isOpen, LessonModel model) {
            IsOpen = isOpen;
            cellColor = Core.Extensions.ColorUtils.ColorFromHex(model.Color).CGColor;
            if (IsOpen)
            {
                ContentView.Layer.BackgroundColor = cellColor;
                numberLblHeightConstraint.Constant = _LabelDefaultHeight * 1.5f;
				this.UpdateConstraintsIfNeeded();

										this.LayoutIfNeeded();
										lbNumber.TextColor = UIColor.White;
										lbTitle.TextColor = UIColor.White;
										btnDownload.TintColor = UIColor.White;
									//});
            } else
            {
				CellShape.AnimateColor = UIColor.White;
				CellShape.FinishColor = UIColor.Clear;
                numberLblHeightConstraint.Constant = _LabelDefaultHeight;
                this.UpdateConstraintsIfNeeded();
                //UIView.Animate(0.4, () =>
                //{
                 this.LayoutIfNeeded();
                 lbNumber.TextColor = UIColor.FromRGB(57, 169, 246);
                 lbTitle.TextColor = UIColor.DarkTextColor;
                 btnDownload.TintColor = UIColor.LightGray;
                //});
                ContentView.Layer.BackgroundColor = cellColor.ToUIColor().BrighterColor().CGColor;
            }
        }

        public void HandleTap(UITapGestureRecognizer obj)
        {
            var touchLocation = obj.LocationInView(ContentView);
            IsOpen = !IsOpen;
            cellColor = imgLesson.Layer.BorderColor;
            if (IsOpen)
            {
                    CellShape.AnimateCGColor = cellColor;
                    CellShape.FinishCGColor = cellColor;
                CellShape.WillAnimateTapGesture(touchLocation);
                // lesson number & title scale up
                numberLblHeightConstraint.Constant *= 1.5f;
                this.UpdateConstraintsIfNeeded();
                UIView.Animate(0.4, () =>
                                    {
                                        this.LayoutIfNeeded();
                                        lbNumber.TextColor = UIColor.White;
                                        lbTitle.TextColor = UIColor.White;
                                        btnDownload.TintColor = UIColor.White;
                                    });
            }
            else
            {
                // scale down lesson number & title
                numberLblHeightConstraint.Constant /= 1.5f;
                this.UpdateConstraintsIfNeeded();
                UIView.Animate(0.4, () =>
                                   {
                                       this.LayoutIfNeeded();
                                       lbNumber.TextColor = UIColor.FromRGB(57, 169, 246);
                                       lbTitle.TextColor = UIColor.DarkTextColor;
                                       btnDownload.TintColor = UIColor.LightGray;
                                   });
                CellShape.AnimateColor = UIColor.White;
                CellShape.FinishColor = UIColor.Clear;
                CellShape.WillAnimateTapGesture(touchLocation);
            }
            Delegate?.DidTapOnLessonCell(this);
        }
    }
}
