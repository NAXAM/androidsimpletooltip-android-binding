// This file has been autogenerated from a class added in the UI designer.

using System;

using Foundation;
using MvvmCross.iOS.Views;
using UIKit;
using ObjCRuntime;
using CoreGraphics;

namespace Naxam.Busuu.iOS.Social
{
    [MvxFromStoryboard(StoryboardName = "Social")]
    public partial class SocialView : MvxViewController
	{

		private bool IsAnimationViewBar = true;

		public SocialView (IntPtr handle) : base (handle)
		{
		}

		public override void ViewDidLoad()
		{
			base.ViewDidLoad();

			ViewBarItem.Layer.ShadowRadius = 2;
			ViewBarItem.Layer.ShadowOffset = new CGSize(2, 2);
			ViewBarItem.Layer.ShadowOpacity = 0.3f;
			ViewBarItem.ClipsToBounds = false;	

            //UIViewController dv = UIStoryboard.FromName("Social", NSBundle.MainBundle).InstantiateViewController("DiscoverView");
            //AddChildViewController(dv);
		}

		partial void ButtonDiscover_TouchUpInside(NSObject sender)
		{
			if (IsAnimationViewBar) return;

			ButtonDiscover.SetTitleColor(UIColor.FromRGB(57, 169, 246), UIControlState.Normal);
			ButtonFriends.SetTitleColor(UIColor.FromRGB(167, 176, 182), UIControlState.Normal);
			ButtonDiscover.Enabled = false;
			ButtonFriends.Enabled = true;

			IsAnimationViewBar = true;
			UIView.BeginAnimations("slideAnimation");
			UIView.SetAnimationDuration(0.5);
			UIView.SetAnimationCurve(UIViewAnimationCurve.EaseInOut);
			UIView.SetAnimationDelegate(this);
			UIView.SetAnimationDidStopSelector(new Selector("animationDidStop:finished:context:"));
			ViewSelectForButton.Center = new CGPoint(ViewSelectForButton.Bounds.Width / 2, 43);
			UIView.CommitAnimations();
		}

		partial void ButtonFriends_TouchUpInside(NSObject sender)
		{
			if (!IsAnimationViewBar) return;

			ButtonFriends.SetTitleColor(UIColor.FromRGB(57, 169, 246), UIControlState.Normal);
			ButtonDiscover.SetTitleColor(UIColor.FromRGB(167, 176, 182), UIControlState.Normal);
			ButtonDiscover.Enabled = true;
			ButtonFriends.Enabled = false;

			IsAnimationViewBar = false;
			UIView.BeginAnimations("slideAnimation");
			UIView.SetAnimationDuration(0.5);
			UIView.SetAnimationCurve(UIViewAnimationCurve.EaseInOut);
			UIView.SetAnimationDelegate(this);
			UIView.SetAnimationDidStopSelector(new Selector("animationDidStop:finished:context:"));
			ViewSelectForButton.Center = new CGPoint(ViewSelectForButton.Bounds.Width + ViewSelectForButton.Bounds.Width / 2, 43);
			UIView.CommitAnimations();
		}

		[Export("animationDidStop:finished:context:")]
		void SlideStopped(NSString animationID, NSNumber finished, NSObject context)
		{
			if (!IsAnimationViewBar)
			{
				ViewSelectForButton.Center = new CGPoint(ViewSelectForButton.Bounds.Width + ViewSelectForButton.Bounds.Width / 2, 43);
			}
			else
			{
				ViewSelectForButton.Center = new CGPoint(ViewSelectForButton.Bounds.Width / 2, 43);
			}
		}

	}
}
